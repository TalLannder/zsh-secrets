#compdef _secrets secrets

function _secrets() {
    local line

     DEFAULT_SECRETS_STORAGE="$HOME/.secrets"
     
     SECRETS_STORAGE=${SECRETS_STORAGE:-$DEFAULT_SECRETS_STORAGE}

     if (( CURRENT > 2 )); then
       # shift words so _arguments doesn't have to be concerned with second command
       (( CURRENT-- ))
       shift words
       # use _call_function here in case it doesn't exist
       _call_function 1 _secrets_${words[1]}
     else
       _values "secrets command" \
         "encrypt[Encrypt a file and move it to $DEFAULT_SECRETS_STORAGE.]" \
         "decrypt[Decrypt a secret and print to stdout.]" \
         "source[Load a secret into current session.]"
     fi
}

function __list_secrets {
    local secrets=($(ls ~/.secrets/))
    local clean_secrets=()
    for secret in $secrets; do
        clean_secrets+=($secret:r)
    done
    _arguments \
        "1: :($clean_secrets)"
}

function _secrets_encrypt {
    _arguments '*:filename:_files'
}

function _secrets_decrypt {
    __list_secrets
}

function _secrets_source {
    __list_secrets
}
